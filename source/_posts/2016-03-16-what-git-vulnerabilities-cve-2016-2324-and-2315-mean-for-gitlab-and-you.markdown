---
layout: post
title: "What Git vulnerabilities CVE-2016-2324 and 2315 mean for GitLab and you"
date: 2016-03-16
comments: true
author: Jacob Vosmaer
author_twitter: jacobvosmaer
---

Yesterday two security vulnerabilities in Git were [made
public](http://www.openwall.com/lists/oss-security/2016/03/15/5). In
response we [released GitLab
8.5.7](https://about.gitlab.com/2016/03/16/gitlab-8-dot-5-dot-7-released/).
In this blog post we will explain in more detail what the
vulnerabilities are about and what their impact on GitLab is.

<!-- more -->

## The problem

An attacker can create a malicious Git repository that causes a [heap
overflow](https://en.wikipedia.org/wiki/Heap_overflow) in `git` commands
that run on that repository (e.g.
`git clone https://example.com/evil-repo.git`). At best this causes your
`git` command to crash; at worst the malicious Git repository
effectively becomes a program that runs on your computer.

This vulnerability got fixed in Git version 2.7.1.

## General impact

If you are using a vulnerable version of Git and you run the 'right'
`git` command on a malicious repository than an attacker may gain
control of your computer. So if you use a vulnerable version of Git on
your laptop and you run a `git` command on a malicious repository the
attacker could execute arbitrary code on your laptop. It also means that
if an attacker can upload a malicious repository to a GitLab server, and
if that GitLab server has a vulnerable version of Git installed, then
the attacker could execute arbitrary code on the GitLab server.

## Impact on GitLab

During various operations GitLab will run `git` commands on repositories
it stores. If your GitLab server uses a vulnerable version of Git and if
one of your users pushed or imported a malicious repository onto your
server then attacker code embedded in the malicious Git repository may
be executed on the GitLab server as the application user.

## What we are doing about it

We have released have released GitLab 8.5.7 for which the recommended
Git version is 2.7.3. The Omnibus packages for GitLab 8.5.7 contain Git
2.7.3.

## What you should do about it

You should make sure that you are using the latest version of Git on
each computer you use Git on. Because there are many different ways to
install Git it is difficult to give specific instructions how to this.

If you are an administrator for a GitLab server and you installed GitLab
using our Omnibus packages then you should make sure you are [using
GitLab 8.5.7 or newer](https://about.gitlab.com/update/).

If you installed GitLab from source or through some other means it is
not enough to update to the latest version of GitLab; you should make
sure you are using the latest version of Git for your platform.

If you installed Git from source according to the GitLab installation
guide you can check its version by running:

    /usr/local/bin/git --version

# UNFINISHED

At this point it is not clear if Git 2.7.3 actually fixes the vulnerability.

http://www.openwall.com/lists/oss-security/2016/03/16/9