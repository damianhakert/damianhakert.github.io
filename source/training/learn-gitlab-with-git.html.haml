---
layout: default
title: Learn GitLab with Git Basics
suppress_header: true
extra_css:
  - training.css
---
.wrapper
  .training-picture-container
    .training-overlay
      .training-content
        %h1.text-center 
          Learning GitLab with Git Basics
        There are two sessions, 90 minutes each. Session 1 is built around re-enforcing how the UI works, and then paralleling that in the command line. Session 2 focuses on Merge Conflicts in the UI and command line and Git/Hub/Lab Flow.
        %h3.text-center 
          Session 1 (90 Minutes)
        %h4 
          Part 1: The UI
        GitLab is software that allows you to do a lot without having to use the command line. In this session, all particiapants will work together to commit code with the instructor and understand the GitLab interface through action and practice.
        The UI also includes some advanced git features, and we dive into those topics at the end of the first session when we cover branching and what Git is and how Git fits into the GitLab equation.
        INSERT VIDEO HERE.
        %h4 
          Part 2: Command Line (45 minutes)
        At this point, it's important to re-enforce how we've been working on the server the whole time, but the power of git comes from working locally (reenforcing the points we covered in the git concepts section). We'll pull the code project down, and show them that it makes a directory locally, and we can see all of the files we made. Instruct them to do the same. Dive into the basic git commands (and git config), and we'll make a change to our files, and You'll push that change up. They can do the same. Go to the server, see the changes as them come in, and explain what happened. Now, you make a change on your branch, push it up, and make the MR. Have them do the same. Reenforce that changes will not go on the server, until they push them. Master won't have changes from their branch until we merge them in. Take the last 5 minutes or so to recap that what we did today, editing code in the UI, editing code remotely, and getting local code remote. This is the end of session one, and they have all had 4 instances of using GitLab with Git. :)
